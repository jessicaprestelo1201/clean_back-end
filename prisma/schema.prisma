generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  nome        String
  email       String       @unique
  senha       String
  idioma      String?
  fotoPerfil  String?
  verificado  Boolean      @default(false)
  curtidas    Like[]
  comentarios Comment[]
  avaliacoes  Avaliacao[]

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map("usuarios")
}

model Like {
  id           String     @id @default(uuid())
  usuario      User?      @relation(fields: [usuarioId], references: [id])
  usuarioId    String?
  produto      Product?   @relation(fields: [produtoId], references: [id])
  produtoId    String?
  comentario   Comment?   @relation(fields: [comentarioId], references: [id])
  comentarioId String?
  artigo       Artigo?    @relation(fields: [artigoId], references: [id])
  artigoId     String?

  createdAt    DateTime   @default(now())

  @@map("curtidas")
}

model Comment {
  id           String     @id @default(uuid())
  conteudo     String
  usuario      User       @relation(fields: [usuarioId], references: [id])
  usuarioId    String
  produto      Product    @relation(fields: [produtoId], references: [id])
  produtoId    String
  curtidas     Like[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@map("comentarios")
}

model Product {
  id             String       @id @default(uuid())
  nome           String
  descricao      String?
  preco          Float
  categoria      String
  cor            String?
  linkMarca      String?
  categoriaMarca String?
  imagem         String?
  curtidas       Like[]
  comentarios    Comment[]
  avaliacoes     Avaliacao[]

  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@map("produtos")
}

model Avaliacao {
  id             String    @id @default(uuid())
  estrelas       Int
  comentario     String?
  avaliacaoSite  Boolean
  nomeUsuario    String
  fotoUsuario    String?
  produto        Product?  @relation(fields: [produtoId], references: [id])
  produtoId      String?
  usuario        User?     @relation(fields: [usuarioId], references: [id])
  usuarioId      String?
  createdAt      DateTime  @default(now())

  @@map("avaliacoes")
}

model Artigo {
  id          String    @id @default(uuid())
  titulo      String
  descricao   String
  imagem      String?
  curtidas    Like[]
  fontes      String    // Links das fontes, pode ser separado por v√≠rgula ou JSON
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("artigos")
}